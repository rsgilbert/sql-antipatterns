// metadata tribbles
// Dont let data spawn metadata 

// table tribbles
// create table for 2023 bugs
// put a check contraint for date_reported
CREATE TABLE bugs_2023
(
	bug_id SERIAL PRIMARY KEY,
    description TEXT,
    date_reported DATE CHECK (EXTRACT(YEAR FROM date_reported) = 2023)
);
// insert data 
INSERT INTO bugs_2023 (description, date_reported) VALUES('jan bug', 20231125);

// extract key word 
SELECT EXTRACT(DAY FROM '2021-01-21');

CREATE TABLE bugs_2022
(
	bug_id SERIAL PRIMARY KEY,
    description TEXT,
    date_reported DATE CHECK (EXTRACT(YEAR FROM date_reported) = 2022)
);

// select from multiple tables 
SELECT * FROM bugs_2022 
	UNION 
    SELECT * FROM bugs_2023;

INSERT INTO bugs_2022 (bug_id, description, date_reported)
	VALUES(DEFAULT, 'first 2022 bug', 20220501), (DEFAULT, 'second 2022 bug', 20220603);

// column tribbles
CREATE TABLE BugHistory (
	id SERIAL PRIMARY KEY,
    bugs_fixed_2020 INT,
    bugs_fixed_2021 INT,
    bugs_fixed_2022 INT,
    bugs_fixed_2023 INT
);

INSERT INTO BugHistory (bugs_fixed_2020, bugs_fixed_2021, bugs_fixed_2022, bugs_fixed_2023) 
	VALUES(0, 5, 10, 7);



// solutions
// create partions if you want to achieve query performance

// horizontal partitioning 
CREATE TABLE bugs_hp2 (
	bug_id SERIAL,
    date_reported DATE,
    date_reported_year INT,
    description TEXT,
    PRIMARY KEY(bug_id)
) PARTITION BY RANGE(bug_id) (
	PARTITION p0 VALUES LESS THAN (2),
    PARTITION p1 VALUES LESS THAN (4),
    PARTITION p2 VALUES LESS THAN (6),
    PARTITION p3 VALUES LESS THAN (10)
);

// vertical partitioning 
// bad 
CREATE TABLE products_vpbad (
	product_id SERIAL PRIMARY KEY,
    name VARCHAR (20),
    installer_image BLOB
);

INSERT INTO products_vpbad (name) VALUES('Nodejs'), ('GTA'), ('Need for speed');

// good / solution 

CREATE TABLE products_vpgood (
	product_id SERIAL PRIMARY KEY,
    name VARCHAR (20)
);
INSERT INTO products_vpgood (name) 
	SELECT name FROM products_vpbad;

CREATE TABLE product_installers_vpgood (
	product_id BIGINT UNSIGNED NOT NULL,
    installer_image BLOB,
    FOREIGN KEY(product_id) REFERENCES products_vpgood(product_id)
);
SELECT * FROM products_vpgood LEFT JOIN product_installers_vpgood USING(product_id);


// solution to metadata column tribbles 
// add a column for year
CREATE TABLE bughistory_good (
    year SMALLINT PRIMARY KEY,
    bugs_fixed INT
);

INSERT INTO bughistory_good (year, bugs_fixed) VALUES (2020, 5), (2021, 8), (2022, 50), (2023, 81);







